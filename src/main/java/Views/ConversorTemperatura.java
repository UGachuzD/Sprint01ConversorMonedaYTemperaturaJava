package Views;

import static Views.Menu.cantidad;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.Scanner;
import javax.swing.JOptionPane;

/**
 *
 * @author Ulises Gachuz Davila
 */
public class ConversorTemperatura extends javax.swing.JFrame {

    /**
     * Creates new form ConversorTemperatura
     */
    private static StringBuilder resultado = new StringBuilder();
    private static String tituloTipoConversion = "";

    public ConversorTemperatura() {
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jCBxOpcionesTemperatura = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(29, 132, 181));
        jPanel1.setPreferredSize(new java.awt.Dimension(360, 140));

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel1.setText("Elija la conversión a la que deseas convertir tus °C:");

        jCBxOpcionesTemperatura.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jCBxOpcionesTemperatura.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "°C a Fahrenheit", "°C a Kelvin", "°C a Newton", "°C a Rankine", "Fahrenheit a °C", "Kelvin a °C", "Newton a °C", "Rankine a °C" }));
        jCBxOpcionesTemperatura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBxOpcionesTemperaturaActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jButton1.setText("Regresar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jButton2.setText("Menú");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(jCBxOpcionesTemperatura, 0, 332, Short.MAX_VALUE))
                .addGap(35, 35, 35))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(66, 66, 66)
                .addComponent(jButton1)
                .addGap(103, 103, 103))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel1)
                .addGap(28, 28, 28)
                .addComponent(jCBxOpcionesTemperatura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(9, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 381, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCBxOpcionesTemperaturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBxOpcionesTemperaturaActionPerformed
        // TODO add your handling code here:
        int opcion = jCBxOpcionesTemperatura.getSelectedIndex();
        switch (opcion) {
            case 0 -> {
                // °C -> °F
                try {
                    URL url = new URL("http://localhost:8080/celciusToFahrenheit/" + cantidad);
                    HttpURLConnection con = (HttpURLConnection) url.openConnection();
                    con.setRequestMethod("GET");
                    int responsecode = con.getResponseCode();
                    if (responsecode != 200) {
                        System.out.println("Error" + responsecode);
                    } else {
                        Scanner sc = new Scanner(url.openStream());
                        while (sc.hasNext()) {
                            resultado.append(sc.nextLine());
                        }
                        sc.close();
                    }
                } catch (Exception e) {
                    e.printStackTrace();
                }
                tituloTipoConversion = jCBxOpcionesTemperatura.getItemAt(opcion);
                JOptionPane.showMessageDialog(null, cantidad + "°C son "+ resultado + "°F", "Resultado: " + tituloTipoConversion, JOptionPane.INFORMATION_MESSAGE);
            }

            case 1 -> {
                // °C a Kelvin
                try {
                    URL url = new URL("http://localhost:8080/celciusToKelvin/" + cantidad);
                    HttpURLConnection con = (HttpURLConnection) url.openConnection();
                    con.setRequestMethod("GET");
                    int responsecode = con.getResponseCode();
                    if (responsecode != 200) {
                        System.out.println("Error" + responsecode);
                    } else {
                        Scanner sc = new Scanner(url.openStream());
                        while (sc.hasNext()) {
                            resultado.append(sc.nextLine());
                        }
                        sc.close();
                    }
                } catch (Exception e) {
                    e.printStackTrace();
                }
                tituloTipoConversion = jCBxOpcionesTemperatura.getItemAt(opcion);
                JOptionPane.showMessageDialog(null, cantidad + "°C son "+ resultado + " Kelvin", "Resultado: " + tituloTipoConversion, JOptionPane.INFORMATION_MESSAGE);
            }

            case 2 -> {
                // °C a Newton
                try {
                    URL url = new URL("http://localhost:8080/celciusToNewton/" + cantidad);
                    HttpURLConnection con = (HttpURLConnection) url.openConnection();
                    con.setRequestMethod("GET");
                    int responsecode = con.getResponseCode();
                    if (responsecode != 200) {
                        System.out.println("Error" + responsecode);
                    } else {
                        Scanner sc = new Scanner(url.openStream());
                        while (sc.hasNext()) {
                            resultado.append(sc.nextLine());
                        }
                        sc.close();
                    }
                } catch (Exception e) {
                    e.printStackTrace();
                }
                tituloTipoConversion = jCBxOpcionesTemperatura.getItemAt(opcion);
                JOptionPane.showMessageDialog(null, cantidad + "°C son "+ resultado + " Newton", "Resultado: " + tituloTipoConversion, JOptionPane.INFORMATION_MESSAGE);
            }

            case 3 -> {
                // °C a Rankine
                try {
                    URL url = new URL("http://localhost:8080/celciusToRankine/" + cantidad);
                    HttpURLConnection con = (HttpURLConnection) url.openConnection();
                    con.setRequestMethod("GET");
                    int responsecode = con.getResponseCode();
                    if (responsecode != 200) {
                        System.out.println("Error" + responsecode);
                    } else {
                        Scanner sc = new Scanner(url.openStream());
                        while (sc.hasNext()) {
                            resultado.append(sc.nextLine());
                        }
                        sc.close();
                    }
                } catch (Exception e) {
                    e.printStackTrace();
                }
                tituloTipoConversion = jCBxOpcionesTemperatura.getItemAt(opcion);
                JOptionPane.showMessageDialog(null, cantidad + "°C son "+ resultado + " Rankine", "Resultado: " + tituloTipoConversion, JOptionPane.INFORMATION_MESSAGE);
            }
            
            case 4 -> {
                // Fahrenheit a °C
                try {
                    URL url = new URL("http://localhost:8080/fahrenheitToCelsius/" + cantidad);
                    HttpURLConnection con = (HttpURLConnection) url.openConnection();
                    con.setRequestMethod("GET");
                    int responsecode = con.getResponseCode();
                    if (responsecode != 200) {
                        System.out.println("Error" + responsecode);
                    } else {
                        Scanner sc = new Scanner(url.openStream());
                        while (sc.hasNext()) {
                            resultado.append(sc.nextLine());
                        }
                        sc.close();
                    }
                } catch (Exception e) {
                    e.printStackTrace();
                }
                tituloTipoConversion = jCBxOpcionesTemperatura.getItemAt(opcion);
                JOptionPane.showMessageDialog(null, cantidad + " Fahrenheit son "+ resultado + "°C", "Resultado: " + tituloTipoConversion, JOptionPane.INFORMATION_MESSAGE);
            }
            
            case 5 -> {
                // Kelvin a °C
                try {
                    URL url = new URL("http://localhost:8080/kelvinToCelsius/" + cantidad);
                    HttpURLConnection con = (HttpURLConnection) url.openConnection();
                    con.setRequestMethod("GET");
                    int responsecode = con.getResponseCode();
                    if (responsecode != 200) {
                        System.out.println("Error" + responsecode);
                    } else {
                        Scanner sc = new Scanner(url.openStream());
                        while (sc.hasNext()) {
                            resultado.append(sc.nextLine());
                        }
                        sc.close();
                    }
                } catch (Exception e) {
                    e.printStackTrace();
                }
                tituloTipoConversion = jCBxOpcionesTemperatura.getItemAt(opcion);
                JOptionPane.showMessageDialog(null, cantidad + " Kelvin son "+ resultado + "°C", "Resultado: " + tituloTipoConversion, JOptionPane.INFORMATION_MESSAGE);
            }
            
            case 6 -> {
                // Newton a °C
                try {
                    URL url = new URL("http://localhost:8080/newtonToCelsius/" + cantidad);
                    HttpURLConnection con = (HttpURLConnection) url.openConnection();
                    con.setRequestMethod("GET");
                    int responsecode = con.getResponseCode();
                    if (responsecode != 200) {
                        System.out.println("Error" + responsecode);
                    } else {
                        Scanner sc = new Scanner(url.openStream());
                        while (sc.hasNext()) {
                            resultado.append(sc.nextLine());
                        }
                        sc.close();
                    }
                } catch (Exception e) {
                    e.printStackTrace();
                }
                tituloTipoConversion = jCBxOpcionesTemperatura.getItemAt(opcion);
                JOptionPane.showMessageDialog(null, cantidad + " Newton son "+ resultado + "°C", "Resultado: " + tituloTipoConversion, JOptionPane.INFORMATION_MESSAGE);
            }
            
            case 7 -> {
                // Rankine a °C
                try {
                    URL url = new URL("http://localhost:8080/rankineToCelsius/" + cantidad);
                    HttpURLConnection con = (HttpURLConnection) url.openConnection();
                    con.setRequestMethod("GET");
                    int responsecode = con.getResponseCode();
                    if (responsecode != 200) {
                        System.out.println("Error" + responsecode);
                    } else {
                        Scanner sc = new Scanner(url.openStream());
                        while (sc.hasNext()) {
                            resultado.append(sc.nextLine());
                        }
                        sc.close();
                    }
                } catch (Exception e) {
                    e.printStackTrace();
                }
                tituloTipoConversion = jCBxOpcionesTemperatura.getItemAt(opcion);
                JOptionPane.showMessageDialog(null, cantidad + " Rankine son "+ resultado + "°C", "Resultado: " + tituloTipoConversion, JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }//GEN-LAST:event_jCBxOpcionesTemperaturaActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConversorTemperatura.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConversorTemperatura.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConversorTemperatura.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConversorTemperatura.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConversorTemperatura().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jCBxOpcionesTemperatura;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
